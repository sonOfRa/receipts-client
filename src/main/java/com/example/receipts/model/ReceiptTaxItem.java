/*
 * Example API for receipts
 * API for generating receipts and mailing them to users
 *
 * OpenAPI spec version: 1.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.receipts.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ReceiptTaxItem
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-26T15:28:50.841+01:00[Europe/Berlin]")
public class ReceiptTaxItem {
  @SerializedName("taxrate")
  private Double taxrate = null;

  @SerializedName("vatShortDescription")
  private String vatShortDescription = null;

  @SerializedName("netSum")
  private Double netSum = null;

  @SerializedName("taxSum")
  private Double taxSum = null;

  @SerializedName("bruttoSum")
  private Double bruttoSum = null;

  public ReceiptTaxItem taxrate(Double taxrate) {
    this.taxrate = taxrate;
    return this;
  }

   /**
   * Value of Taxrate
   * @return taxrate
  **/
  @Schema(example = "7", required = true, description = "Value of Taxrate")
  public Double getTaxrate() {
    return taxrate;
  }

  public void setTaxrate(Double taxrate) {
    this.taxrate = taxrate;
  }

  public ReceiptTaxItem vatShortDescription(String vatShortDescription) {
    this.vatShortDescription = vatShortDescription;
    return this;
  }

   /**
   * Charakter to represent vattype
   * @return vatShortDescription
  **/
  @Schema(example = "A", required = true, description = "Charakter to represent vattype")
  public String getVatShortDescription() {
    return vatShortDescription;
  }

  public void setVatShortDescription(String vatShortDescription) {
    this.vatShortDescription = vatShortDescription;
  }

  public ReceiptTaxItem netSum(Double netSum) {
    this.netSum = netSum;
    return this;
  }

   /**
   * Sum of receipt for Taxrate without Taxes
   * @return netSum
  **/
  @Schema(required = true, description = "Sum of receipt for Taxrate without Taxes")
  public Double getNetSum() {
    return netSum;
  }

  public void setNetSum(Double netSum) {
    this.netSum = netSum;
  }

  public ReceiptTaxItem taxSum(Double taxSum) {
    this.taxSum = taxSum;
    return this;
  }

   /**
   * Sum of Taxes for Taxrate of the Receipt
   * @return taxSum
  **/
  @Schema(required = true, description = "Sum of Taxes for Taxrate of the Receipt")
  public Double getTaxSum() {
    return taxSum;
  }

  public void setTaxSum(Double taxSum) {
    this.taxSum = taxSum;
  }

  public ReceiptTaxItem bruttoSum(Double bruttoSum) {
    this.bruttoSum = bruttoSum;
    return this;
  }

   /**
   * Sum of receipt for Taxrate including Taxes
   * @return bruttoSum
  **/
  @Schema(required = true, description = "Sum of receipt for Taxrate including Taxes")
  public Double getBruttoSum() {
    return bruttoSum;
  }

  public void setBruttoSum(Double bruttoSum) {
    this.bruttoSum = bruttoSum;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReceiptTaxItem receiptTaxItem = (ReceiptTaxItem) o;
    return Objects.equals(this.taxrate, receiptTaxItem.taxrate) &&
        Objects.equals(this.vatShortDescription, receiptTaxItem.vatShortDescription) &&
        Objects.equals(this.netSum, receiptTaxItem.netSum) &&
        Objects.equals(this.taxSum, receiptTaxItem.taxSum) &&
        Objects.equals(this.bruttoSum, receiptTaxItem.bruttoSum);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taxrate, vatShortDescription, netSum, taxSum, bruttoSum);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReceiptTaxItem {\n");
    
    sb.append("    taxrate: ").append(toIndentedString(taxrate)).append("\n");
    sb.append("    vatShortDescription: ").append(toIndentedString(vatShortDescription)).append("\n");
    sb.append("    netSum: ").append(toIndentedString(netSum)).append("\n");
    sb.append("    taxSum: ").append(toIndentedString(taxSum)).append("\n");
    sb.append("    bruttoSum: ").append(toIndentedString(bruttoSum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

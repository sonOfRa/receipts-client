/*
 * Example API for receipts
 * API for generating receipts and mailing them to users
 *
 * OpenAPI spec version: 1.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.receipts.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.receipts.model.Discount;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ReceiptItem
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-26T15:28:50.841+01:00[Europe/Berlin]")
public class ReceiptItem {
  @SerializedName("itemName")
  private String itemName = null;

  @SerializedName("itemPrice")
  private Double itemPrice = null;

  @SerializedName("itemUnitPrice")
  private Double itemUnitPrice = null;

  @SerializedName("itemQuantity")
  private Double itemQuantity = null;

  @SerializedName("itemSpecialPrice")
  private Double itemSpecialPrice = null;

  @SerializedName("packingunitName")
  private String packingunitName = null;

  @SerializedName("vatShortDescription")
  private String vatShortDescription = null;

  @SerializedName("discount")
  private Discount discount = null;

  public ReceiptItem itemName(String itemName) {
    this.itemName = itemName;
    return this;
  }

   /**
   * Name of the item
   * @return itemName
  **/
  @Schema(example = "Erdbeeren 500g", required = true, description = "Name of the item")
  public String getItemName() {
    return itemName;
  }

  public void setItemName(String itemName) {
    this.itemName = itemName;
  }

  public ReceiptItem itemPrice(Double itemPrice) {
    this.itemPrice = itemPrice;
    return this;
  }

   /**
   * Price of Itemposition
   * @return itemPrice
  **/
  @Schema(example = "7.99", required = true, description = "Price of Itemposition")
  public Double getItemPrice() {
    return itemPrice;
  }

  public void setItemPrice(Double itemPrice) {
    this.itemPrice = itemPrice;
  }

  public ReceiptItem itemUnitPrice(Double itemUnitPrice) {
    this.itemUnitPrice = itemUnitPrice;
    return this;
  }

   /**
   * Price per unit, in Euro inkl. Taxes
   * @return itemUnitPrice
  **/
  @Schema(example = "5.50", description = "Price per unit, in Euro inkl. Taxes")
  public Double getItemUnitPrice() {
    return itemUnitPrice;
  }

  public void setItemUnitPrice(Double itemUnitPrice) {
    this.itemUnitPrice = itemUnitPrice;
  }

  public ReceiptItem itemQuantity(Double itemQuantity) {
    this.itemQuantity = itemQuantity;
    return this;
  }

   /**
   * Amount of item in receipt
   * @return itemQuantity
  **/
  @Schema(example = "2.543", required = true, description = "Amount of item in receipt")
  public Double getItemQuantity() {
    return itemQuantity;
  }

  public void setItemQuantity(Double itemQuantity) {
    this.itemQuantity = itemQuantity;
  }

  public ReceiptItem itemSpecialPrice(Double itemSpecialPrice) {
    this.itemSpecialPrice = itemSpecialPrice;
    return this;
  }

   /**
   * Special Price for Itemposition like Manual Price. If not null it must be taken
   * @return itemSpecialPrice
  **/
  @Schema(example = "2.53", description = "Special Price for Itemposition like Manual Price. If not null it must be taken")
  public Double getItemSpecialPrice() {
    return itemSpecialPrice;
  }

  public void setItemSpecialPrice(Double itemSpecialPrice) {
    this.itemSpecialPrice = itemSpecialPrice;
  }

  public ReceiptItem packingunitName(String packingunitName) {
    this.packingunitName = packingunitName;
    return this;
  }

   /**
   * Name of Packingunt e.g. kg or schale
   * @return packingunitName
  **/
  @Schema(example = "Schale", description = "Name of Packingunt e.g. kg or schale")
  public String getPackingunitName() {
    return packingunitName;
  }

  public void setPackingunitName(String packingunitName) {
    this.packingunitName = packingunitName;
  }

  public ReceiptItem vatShortDescription(String vatShortDescription) {
    this.vatShortDescription = vatShortDescription;
    return this;
  }

   /**
   * Charakter to represent vattype
   * @return vatShortDescription
  **/
  @Schema(example = "A", required = true, description = "Charakter to represent vattype")
  public String getVatShortDescription() {
    return vatShortDescription;
  }

  public void setVatShortDescription(String vatShortDescription) {
    this.vatShortDescription = vatShortDescription;
  }

  public ReceiptItem discount(Discount discount) {
    this.discount = discount;
    return this;
  }

   /**
   * Get discount
   * @return discount
  **/
  @Schema(description = "")
  public Discount getDiscount() {
    return discount;
  }

  public void setDiscount(Discount discount) {
    this.discount = discount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReceiptItem receiptItem = (ReceiptItem) o;
    return Objects.equals(this.itemName, receiptItem.itemName) &&
        Objects.equals(this.itemPrice, receiptItem.itemPrice) &&
        Objects.equals(this.itemUnitPrice, receiptItem.itemUnitPrice) &&
        Objects.equals(this.itemQuantity, receiptItem.itemQuantity) &&
        Objects.equals(this.itemSpecialPrice, receiptItem.itemSpecialPrice) &&
        Objects.equals(this.packingunitName, receiptItem.packingunitName) &&
        Objects.equals(this.vatShortDescription, receiptItem.vatShortDescription) &&
        Objects.equals(this.discount, receiptItem.discount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemName, itemPrice, itemUnitPrice, itemQuantity, itemSpecialPrice, packingunitName, vatShortDescription, discount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReceiptItem {\n");
    
    sb.append("    itemName: ").append(toIndentedString(itemName)).append("\n");
    sb.append("    itemPrice: ").append(toIndentedString(itemPrice)).append("\n");
    sb.append("    itemUnitPrice: ").append(toIndentedString(itemUnitPrice)).append("\n");
    sb.append("    itemQuantity: ").append(toIndentedString(itemQuantity)).append("\n");
    sb.append("    itemSpecialPrice: ").append(toIndentedString(itemSpecialPrice)).append("\n");
    sb.append("    packingunitName: ").append(toIndentedString(packingunitName)).append("\n");
    sb.append("    vatShortDescription: ").append(toIndentedString(vatShortDescription)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

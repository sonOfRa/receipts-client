/*
 * Example API for receipts
 * API for generating receipts and mailing them to users
 *
 * OpenAPI spec version: 1.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.receipts.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.receipts.model.ReceiptItem;
import com.example.receipts.model.ReceiptTax;
import com.example.receipts.model.TseData;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * Receipt
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-26T15:28:50.841+01:00[Europe/Berlin]")
public class Receipt {
  @SerializedName("receiptId")
  private Long receiptId = null;

  @SerializedName("header")
  private String header = null;

  @SerializedName("carrierName")
  private String carrierName = null;

  @SerializedName("carrierAddress")
  private String carrierAddress = null;

  @SerializedName("taxNumber")
  private String taxNumber = null;

  @SerializedName("receiptDate")
  private OffsetDateTime receiptDate = null;

  @SerializedName("receiptTotal")
  private BigDecimal receiptTotal = null;

  @SerializedName("receiptGiven")
  private BigDecimal receiptGiven = null;

  @SerializedName("receiptnumber")
  private Long receiptnumber = null;

  @SerializedName("cashdesknumber")
  private Long cashdesknumber = null;

  @SerializedName("change")
  private Double change = null;

  @SerializedName("footer")
  private String footer = null;

  @SerializedName("location")
  private String location = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("receiptCurrency")
  private String receiptCurrency = null;

  @SerializedName("items")
  private List<ReceiptItem> items = new ArrayList<ReceiptItem>();

  @SerializedName("receiptTax")
  private ReceiptTax receiptTax = null;

  @SerializedName("tseData")
  private TseData tseData = null;

  public Receipt receiptId(Long receiptId) {
    this.receiptId = receiptId;
    return this;
  }

   /**
   * Get receiptId
   * @return receiptId
  **/
  @Schema(example = "5", required = true, description = "")
  public Long getReceiptId() {
    return receiptId;
  }

  public void setReceiptId(Long receiptId) {
    this.receiptId = receiptId;
  }

  public Receipt header(String header) {
    this.header = header;
    return this;
  }

   /**
   * Text header for the receipt
   * @return header
  **/
  @Schema(example = "Hier könnte ihr Header stehen!", required = true, description = "Text header for the receipt")
  public String getHeader() {
    return header;
  }

  public void setHeader(String header) {
    this.header = header;
  }

  public Receipt carrierName(String carrierName) {
    this.carrierName = carrierName;
    return this;
  }

   /**
   * Name of the carrier
   * @return carrierName
  **/
  @Schema(example = "Example corp", required = true, description = "Name of the carrier")
  public String getCarrierName() {
    return carrierName;
  }

  public void setCarrierName(String carrierName) {
    this.carrierName = carrierName;
  }

  public Receipt carrierAddress(String carrierAddress) {
    this.carrierAddress = carrierAddress;
    return this;
  }

   /**
   * Address of the carrier
   * @return carrierAddress
  **/
  @Schema(example = "Example street, 12345 Wherever", required = true, description = "Address of the carrier")
  public String getCarrierAddress() {
    return carrierAddress;
  }

  public void setCarrierAddress(String carrierAddress) {
    this.carrierAddress = carrierAddress;
  }

  public Receipt taxNumber(String taxNumber) {
    this.taxNumber = taxNumber;
    return this;
  }

   /**
   * Taxnumber of the Carrier
   * @return taxNumber
  **/
  @Schema(example = "UID Nr. DE123456789", required = true, description = "Taxnumber of the Carrier")
  public String getTaxNumber() {
    return taxNumber;
  }

  public void setTaxNumber(String taxNumber) {
    this.taxNumber = taxNumber;
  }

  public Receipt receiptDate(OffsetDateTime receiptDate) {
    this.receiptDate = receiptDate;
    return this;
  }

   /**
   * date and time for the receipt
   * @return receiptDate
  **/
  @Schema(required = true, description = "date and time for the receipt")
  public OffsetDateTime getReceiptDate() {
    return receiptDate;
  }

  public void setReceiptDate(OffsetDateTime receiptDate) {
    this.receiptDate = receiptDate;
  }

  public Receipt receiptTotal(BigDecimal receiptTotal) {
    this.receiptTotal = receiptTotal;
    return this;
  }

   /**
   * Total Sum incl. Taxes
   * @return receiptTotal
  **/
  @Schema(example = "17.53", required = true, description = "Total Sum incl. Taxes")
  public BigDecimal getReceiptTotal() {
    return receiptTotal;
  }

  public void setReceiptTotal(BigDecimal receiptTotal) {
    this.receiptTotal = receiptTotal;
  }

  public Receipt receiptGiven(BigDecimal receiptGiven) {
    this.receiptGiven = receiptGiven;
    return this;
  }

   /**
   * Given Total of Customer
   * @return receiptGiven
  **/
  @Schema(example = "17.53", required = true, description = "Given Total of Customer")
  public BigDecimal getReceiptGiven() {
    return receiptGiven;
  }

  public void setReceiptGiven(BigDecimal receiptGiven) {
    this.receiptGiven = receiptGiven;
  }

  public Receipt receiptnumber(Long receiptnumber) {
    this.receiptnumber = receiptnumber;
    return this;
  }

   /**
   * Number of the receipt
   * @return receiptnumber
  **/
  @Schema(example = "31512", required = true, description = "Number of the receipt")
  public Long getReceiptnumber() {
    return receiptnumber;
  }

  public void setReceiptnumber(Long receiptnumber) {
    this.receiptnumber = receiptnumber;
  }

  public Receipt cashdesknumber(Long cashdesknumber) {
    this.cashdesknumber = cashdesknumber;
    return this;
  }

   /**
   * Cash register number from which the receipt originates
   * @return cashdesknumber
  **/
  @Schema(example = "14", required = true, description = "Cash register number from which the receipt originates")
  public Long getCashdesknumber() {
    return cashdesknumber;
  }

  public void setCashdesknumber(Long cashdesknumber) {
    this.cashdesknumber = cashdesknumber;
  }

  public Receipt change(Double change) {
    this.change = change;
    return this;
  }

   /**
   * Customers exchange money
   * @return change
  **/
  @Schema(example = "2.34", required = true, description = "Customers exchange money")
  public Double getChange() {
    return change;
  }

  public void setChange(Double change) {
    this.change = change;
  }

  public Receipt footer(String footer) {
    this.footer = footer;
    return this;
  }

   /**
   * footer text of the receipt
   * @return footer
  **/
  @Schema(example = "Vielen Dank für Ihren Einkauf!", required = true, description = "footer text of the receipt")
  public String getFooter() {
    return footer;
  }

  public void setFooter(String footer) {
    this.footer = footer;
  }

  public Receipt location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Location of the point of sale
   * @return location
  **/
  @Schema(example = "Hofladen", required = true, description = "Location of the point of sale")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public Receipt email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Email address to send the receipt to
   * @return email
  **/
  @Schema(description = "Email address to send the receipt to")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Receipt receiptCurrency(String receiptCurrency) {
    this.receiptCurrency = receiptCurrency;
    return this;
  }

   /**
   * ISO 4217 Currency Code
   * @return receiptCurrency
  **/
  @Schema(example = "EUR", required = true, description = "ISO 4217 Currency Code")
  public String getReceiptCurrency() {
    return receiptCurrency;
  }

  public void setReceiptCurrency(String receiptCurrency) {
    this.receiptCurrency = receiptCurrency;
  }

  public Receipt items(List<ReceiptItem> items) {
    this.items = items;
    return this;
  }

  public Receipt addItemsItem(ReceiptItem itemsItem) {
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Get items
   * @return items
  **/
  @Schema(required = true, description = "")
  public List<ReceiptItem> getItems() {
    return items;
  }

  public void setItems(List<ReceiptItem> items) {
    this.items = items;
  }

  public Receipt receiptTax(ReceiptTax receiptTax) {
    this.receiptTax = receiptTax;
    return this;
  }

   /**
   * Get receiptTax
   * @return receiptTax
  **/
  @Schema(required = true, description = "")
  public ReceiptTax getReceiptTax() {
    return receiptTax;
  }

  public void setReceiptTax(ReceiptTax receiptTax) {
    this.receiptTax = receiptTax;
  }

  public Receipt tseData(TseData tseData) {
    this.tseData = tseData;
    return this;
  }

   /**
   * Get tseData
   * @return tseData
  **/
  @Schema(description = "")
  public TseData getTseData() {
    return tseData;
  }

  public void setTseData(TseData tseData) {
    this.tseData = tseData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Receipt receipt = (Receipt) o;
    return Objects.equals(this.receiptId, receipt.receiptId) &&
        Objects.equals(this.header, receipt.header) &&
        Objects.equals(this.carrierName, receipt.carrierName) &&
        Objects.equals(this.carrierAddress, receipt.carrierAddress) &&
        Objects.equals(this.taxNumber, receipt.taxNumber) &&
        Objects.equals(this.receiptDate, receipt.receiptDate) &&
        Objects.equals(this.receiptTotal, receipt.receiptTotal) &&
        Objects.equals(this.receiptGiven, receipt.receiptGiven) &&
        Objects.equals(this.receiptnumber, receipt.receiptnumber) &&
        Objects.equals(this.cashdesknumber, receipt.cashdesknumber) &&
        Objects.equals(this.change, receipt.change) &&
        Objects.equals(this.footer, receipt.footer) &&
        Objects.equals(this.location, receipt.location) &&
        Objects.equals(this.email, receipt.email) &&
        Objects.equals(this.receiptCurrency, receipt.receiptCurrency) &&
        Objects.equals(this.items, receipt.items) &&
        Objects.equals(this.receiptTax, receipt.receiptTax) &&
        Objects.equals(this.tseData, receipt.tseData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(receiptId, header, carrierName, carrierAddress, taxNumber, receiptDate, receiptTotal, receiptGiven, receiptnumber, cashdesknumber, change, footer, location, email, receiptCurrency, items, receiptTax, tseData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Receipt {\n");
    
    sb.append("    receiptId: ").append(toIndentedString(receiptId)).append("\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    carrierName: ").append(toIndentedString(carrierName)).append("\n");
    sb.append("    carrierAddress: ").append(toIndentedString(carrierAddress)).append("\n");
    sb.append("    taxNumber: ").append(toIndentedString(taxNumber)).append("\n");
    sb.append("    receiptDate: ").append(toIndentedString(receiptDate)).append("\n");
    sb.append("    receiptTotal: ").append(toIndentedString(receiptTotal)).append("\n");
    sb.append("    receiptGiven: ").append(toIndentedString(receiptGiven)).append("\n");
    sb.append("    receiptnumber: ").append(toIndentedString(receiptnumber)).append("\n");
    sb.append("    cashdesknumber: ").append(toIndentedString(cashdesknumber)).append("\n");
    sb.append("    change: ").append(toIndentedString(change)).append("\n");
    sb.append("    footer: ").append(toIndentedString(footer)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    receiptCurrency: ").append(toIndentedString(receiptCurrency)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    receiptTax: ").append(toIndentedString(receiptTax)).append("\n");
    sb.append("    tseData: ").append(toIndentedString(tseData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
